# iperf
# Autogenerated from man page /usr/share/man/man1/iperf.1.gz
complete -c iperf -s f -l format -d '[kmKM]   format to report: Kbits, Mbits, KBytes, MBytes'
complete -c iperf -s h -l help -d 'print a help synopsis'
complete -c iperf -s i -l interval -d 'pause n seconds between periodic bandwidth reports'
complete -c iperf -s l -l len -d 'set length read/write buffer to n (default 8 KB)'
complete -c iperf -s m -l print_mss -d 'print TCP maximum segment size (MTU - TCP/IP header)'
complete -c iperf -s o -l output -d 'output the report or error message to this specified file'
complete -c iperf -s p -l port -d 'set server port to listen on/connect to to n (default 5001)'
complete -c iperf -s u -l udp -d 'use UDP rather than TCP'
complete -c iperf -s w -l window -d 'TCP window size (socket buffer size)'
complete -c iperf -s B -l bind -d 'bind to <host>, an interface or multicast address'
complete -c iperf -s C -l compatibility -d 'for use with older versions does not sent extra msgs'
complete -c iperf -s M -l mss -d 'set TCP maximum segment size (MTU - 40 bytes)'
complete -c iperf -s N -l nodelay -d 'set TCP no delay, disabling Nagle\'s Algorithm'
complete -c iperf -s v -l version -d 'print version information and quit'
complete -c iperf -s V -l IPv6Version -d 'Set the domain to IPv6'
complete -c iperf -s x -l reportexclude -d '[CDMSV]   exclude C(connection) D(data) M(multicast) S(settings) V(server) re…'
complete -c iperf -s y -l reportstyle -d 'if set to C or c report results as CSV (comma separated values) SERVER SPECIF…'
complete -c iperf -s s -l server -d 'run in server mode'
complete -c iperf -s U -l single_udp -d 'run in single threaded UDP mode'
complete -c iperf -s D -l daemon -d 'run the server as a daemon CLIENT SPECIFIC OPTIONS'
complete -c iperf -s b -l bandwidth -d 'set target bandwidth to n bits/sec (default 1 Mbit/sec)'
complete -c iperf -s c -l client -d 'run in client mode, connecting to <host>'
complete -c iperf -s d -l dualtest -d 'Do a bidirectional test simultaneously'
complete -c iperf -s n -l num -d 'number of bytes to transmit (instead of -t)'
complete -c iperf -s r -l tradeoff -d 'Do a bidirectional test individually'
complete -c iperf -s t -l time -d 'time in seconds to transmit for (default 10 secs)'
complete -c iperf -s F -l fileinput -d 'input the data to be transmitted from a file'
complete -c iperf -s I -l stdin -d 'input the data to be transmitted from stdin'
complete -c iperf -s L -l listenport -d 'port to recieve bidirectional tests back on'
complete -c iperf -s P -l parallel -d 'number of parallel client threads to run'
complete -c iperf -s T -l ttl -d 'time-to-live, for multicast (default 1)'
complete -c iperf -s Z -l linux-congestion -d 'set TCP congestion control algorithm (Linux only) ENVIRONMENT'

